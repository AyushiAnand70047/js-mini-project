In Google Sheet write Email in first column as name of input field in website is Email. Then go to Extensions -> Apps Script and add below code. Then save then click on run then review permissions.
Rename Project to Email List
Deploy -> New Deployment Then select type as Web app(Add Description (Email List) and who has access(Anyone)) Then Deploy.
You will get script url (https://script.google.com/macros/s/AKfycbyh_32QmRdEBw-eZe___JxrnFUbwDj7PBaK9HhLui0uchSGCgtmyMtjO-R-VQrfnvOaiQ/exec)

var sheetName = 'Sheet1'
var scriptProp = PropertiesService.getScriptProperties()

function intialSetup () {
  var activeSpreadsheet = SpreadsheetApp.getActiveSpreadsheet()
  scriptProp.setProperty('key', activeSpreadsheet.getId())
}

function doPost (e) {
  var lock = LockService.getScriptLock()
  lock.tryLock(10000)

  try {
    var doc = SpreadsheetApp.openById(scriptProp.getProperty('key'))
    var sheet = doc.getSheetByName(sheetName)

    var headers = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0]
    var nextRow = sheet.getLastRow() + 1

    var newRow = headers.map(function(header) {
      return header === 'timestamp' ? new Date() : e.parameter[header]
    })

    sheet.getRange(nextRow, 1, 1, newRow.length).setValues([newRow])

    return ContentService
      .createTextOutput(JSON.stringify({ 'result': 'success', 'row': nextRow }))
      .setMimeType(ContentService.MimeType.JSON)
  }

  catch (e) {
    return ContentService
      .createTextOutput(JSON.stringify({ 'result': 'error', 'error': e }))
      .setMimeType(ContentService.MimeType.JSON)
  }

  finally {
    lock.releaseLock()
  }
}

Paste this script html file
<script src="https://wzrd.in/standalone/formdata-polyfill"></script>
<script src="https://wzrd.in/standalone/promise-polyfill@latest"></script>
<script src="https://wzrd.in/standalone/whatwg-fetch@latest"></script
<script>
    const scriptURL = '<SCRIPT URL>'
    const form = document.forms['submit-to-google-sheet']
    form.addEventListener('submit', e => {
        e.preventDefault()
        fetch(scriptURL, {method: 'POST', body: new FormData(form)})
        .then(response => console.log('Success!', response))
        .catch(error => console.log('Error', error.message))
    })
</script>

In html file in form tag add name as submit-to-google-sheet